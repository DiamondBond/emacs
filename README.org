#+STARTUP: overview
#+AUTHOR: Diamond Bond
#+LANGUAGE: en
#+OPTIONS: num:nil

#+html: <a href="https://www.gnu.org/software/emacs/"><img alt="GNU Emacs" src="https://github.com/minad/corfu/blob/screenshots/emacs.svg?raw=true"/></a>
#+html: <img src="https://raw.githubusercontent.com/DiamondBond/emacs/master/img/gnusstorm-2.gif" align="right" width="42%">

* Introduction
This Emacs distro aims to enhance the default Emacs experience.

It is recommend to run this distribution with the latest [[https://ftp.gnu.org/gnu/emacs/emacs-28.1.tar.xz][Emacs 28.1]] compiled from source with these [[https://github.com/DiamondBond/emacs/blob/master/README.org#configuration][configure flags]].

[[https://github.com/DiamondBond/emacs/blob/master/config.org][Main Configuration]]

[[https://github.com/DiamondBond/emacs/blob/master/config.org#use-package][Package Manifest]]

[[https://github.com/DiamondBond/emacs/blob/master/config.org#keybinds][Keybind Maps]]

[[https://github.com/DiamondBond/emacs/blob/master/config.org#functions][Function Definitions]]

** Summary
This Emacs distribution attempts to achieve the following goals:

*** Performance over all else
Function-over-form.
*** Aggressively use best practices
We utilize use-package & straight.el for reproducibility.
*** Extensively document and comment all code
The main configuration is literate and has comments / docstrings wherever possible.
*** Remain as simple as possible whilst maximizing usability
e.g: Vertico/Corfu & friends instead of Helm/Ivy/Company.

* Setup
Please refer to the dependencies section below first to make sure Emacs and your environment have the required packages and configurations setup correctly, then proceed to clone and install this distribution.

#+begin_src sh
  # Clone configuration to ~/git/emacs
  mkdir -p ~/git; git clone https://github.com/diamondbond/emacs ~/git/emacs

  # Backup old emacs configuration
  mv ~/.emacs.d ~/.emacs.d.old

  # Copy new configuration to ~/.emacs.d
  mkdir -p ~/.emacs.d; cp -r ~/git/emacs/{early-init.el,init.el,config.org,snippets,img} ~/.emacs.d/

  # Start the Emacs daemon
  emacs --daemon;
  # make & get a cup/pot of tea &/or coffee,
  # straight.el will begin cloning all the declared packages.

  # Start Emacs client once straight.el is done
  emacsclient -c -n -a 'emacs'
#+end_src
The first time you run Emacs, straight.el will download all the declared packages in the config.org file, please be patient.

To get autocompletion on JS/TS & Python files, you'll need to install the corresponding lsp backend servers first (you'll be automatically prompted to do so the first time you open a relevant file).

*Post Setup*
Once Emacs launches for the first time we need to setup a few more things:

* Compile pdf-tools
#+begin_src sh
  M-x pdf-tools-install
#+end_src
* Compile vterm modules
#+begin_src sh
  M-x vterm
#+end_src
* Download & install all-the-icons font
#+begin_src sh
  M-x all-the-icons-install-fonts
#+end_src
* Dependencies
** Packages
This section is just packages that I have needed in the past to comfortably run this Emacs distribution, not everything here is required, this is just a rough guideline.
*** System
#+begin_quote
offlineimap
fzf ripgrep ag
clang clangd llvm
texlive-latex-recommended
imagemagick
editorconfig
libjansson
rust-all cargo
nodejs npm
libxml2
gopls
prettier
#+end_quote
*** Python
#+begin_src bash
  pip3 install pyflakes isort nose pytest pygifsicle nose2 httpserver future pandas numpy matplotlib python-rofi
#+end_src
*** NPM
Please install deno & typescript-language-server for Typescript (TS/TSX) support.
#+begin_src bash
  sudo npm install -g deno typescript-language-server bash-language-server
#+end_src
** Files
I use Dropbox and I symlink ~/org & ~/pdf to their respective subdirs within ~/Dropbox.
#+begin_src sh
  mkdir -p ~/Dropbox/{org,pdfs}; ln -s ~/Dropbox/org ~/org; ln -s ~/Dropbox/pdfs ~/pdfs
#+end_src
** Emacs
How to compile and install the latest GNU Emacs from HEAD.
*** Grabbing sources
Clone the latest emacs sources:
#+begin_src sh
  cd ~/git
  git clone -b master git://git.sv.gnu.org/emacs.git
#+end_src
*** Configuration
Configure Emacs for building with json, native-comp and the athena toolkit with xaw3d toolbars.
#+begin_src sh
  # Run the auto-generation script
  ./autogen.sh

  # Configure Emacs
  # athena & nativecomp [for: rc-28.1 on X11]
  ./configure --with-dbus --with-gif --with-jpeg --with-png --with-rsvg --with-tiff --with-xft --with-xpm --with-gpm=no --disable-silent-rules --with-modules --with-file-notification=inotify --with-mailutils --with-x=yes --with-x-toolkit=athena --without-gconf --without-gsettings --with-lcms2 --with-imagemagick --with-xml2 --with-json --with-harfbuzz --without-compress-install --with-native-compilation CFLAGS="-O3 -mtune=native -march=native -fomit-frame-pointer -flto -fno-semantic-interposition"
#+end_src
*** Compiling
We build with all cores and natively compile everything ahead of time, this will take a while.
#+begin_src sh
  make NATIVE_FULL_AOT=1 -j$(nproc)
  sudo make install
#+end_src
** Email
*** 0. Prerequisites
mu4e (mu) & offlineimap to manage Email within Emacs.
#+begin_quote
maildir=~/mail
#+end_quote
*** 1. Configuring offlineimap
[[https://github.com/DiamondBond/dotfiles/blob/master/.offlineimaprc][offlineimap.rc]]

[[https://github.com/DiamondBond/dotfiles/blob/master/.offlineimap.py][offlineimap.py]]
*** 2. Configuring mu
[[https://github.com/DiamondBond/emacs/blob/master/config.org#prerequisites][mu Setup]]
