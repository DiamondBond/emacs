#+STARTUP: overview
#+AUTHOR: Diamond Bond
#+LANGUAGE: en
#+html: <a href="https://www.gnu.org/software/emacs/"><img alt="GNU Emacs" src="https://github.com/minad/corfu/blob/screenshots/emacs.svg?raw=true"></a>
#+html: <img src="https://raw.githubusercontent.com/DiamondBond/emacs/master/img/gnusstorm-2.gif">
#+OPTIONS: toc:nil num:nil

* Introduction
A sensible Emacs distro aimed at enhancing the default experience.

* Quick Start
** 0. Install Emacs

[[https://github.com/DiamondBond/emacs/blob/master/docs/emacsfromsource.org][Emacs]] build instructions.

** 1. Clone this repository

#+caption: Command to clone this Emacs distros =git= repository.
#+name: li#git_clone
#+begin_src sh

  git clone https://github.com/diamondbond/emacs ~/git/emacs

#+end_src

** 2. Install the configuration

#+caption: Command to install this Emacs distro.
#+name: li#install
#+begin_src sh

  mv ~/.emacs.d ~/.emacs.d.old

  cd ~/git/emacs
  chmod +x install.sh
  ./install.sh

#+end_src

** 3. Bootstrap Emacs

  This will take some time.
  NOTE: Please answer y for vterm-modules to be autoinstalled.

#+caption: Command to bootstrap this Emacs distro.
#+name: li#bootstrap
#+begin_src sh

  emacs --daemon

#+end_src

** 4. Connect to Emacs

#+caption: Command to connect to Emacs daemon.
#+name: li#connectemacs
#+begin_src sh

  emacsclient -c -n -a 'emacs'

#+end_src

** 5. Post Setup

Once Emacs launches for the first time we need to setup a few more things for everything to work as intended.

*** Compile pdf-tools

Install pdf-tools.

#+begin_quote
  M-x pdf-tools-install
#+end_quote

*** Compile vterm modules

Compile vterm-modules & setup vterm.

#+begin_quote
  M-x vterm
#+end_quote

*** Setup all-the-icons

Download & install the all-the-icons font.

#+begin_quote
  M-x all-the-icons-install-fonts
#+end_quote

*** Setup LSP

Install [[https://github.com/emacs-lsp/lsp-mode#supported-languages][language servers]] manually (see [[https://github.com/DiamondBond/emacs#dependencies][dependencies]]) or with =M-x lsp-install-server=

*** Setup Email

Refer to the [[https://github.com/DiamondBond/emacs/blob/master/docs/setupemail.org][Email setup documentation]] for this functionality.

* Principles

This configuration and all associated modules intend to follow the below priniciples.

** Performant

Provides a responsive experience that adheres to form follows function principles.

** Reproducible

Utilizes straight.el for reproducibility & increased stability.

** Literate

Every elisp snippet is commented or documented.

Provide verbose doc-strings and inline code commentary.

** Correct

Aggressively utilizes best practices.

Where possible, we will leverage built-in Emacs functionality instead of external packages.

** Modular

The base configuration only sets up Emacs to have a cleaner presentation with sensible defaults.

The implication is that someone should be able to install or copy code from this configuration into their own configuration or vice versa.

* Modules

This list is in chronological load order.

- [[file:early-init.el][early-bootstrap]] :: Early bootstrap
- [[file:init.el][bootstrap]] :: Bootstrap straight.el
- [[https://github.com/DiamondBond/emacs/blob/master/config.org#base][base]] :: Base configuration
- [[https://github.com/DiamondBond/emacs/blob/master/config.org#keybinds][keybinds]] :: Keybinding maps
- [[https://github.com/DiamondBond/emacs/blob/master/config.org#use-package][packages]] :: Package manifest
- [[https://github.com/DiamondBond/emacs/blob/master/config.org#languages][languages]] :: Language manifest
- [[https://github.com/DiamondBond/emacs/blob/master/config.org#functions][functions]] :: Function definitions
- [[https://github.com/DiamondBond/emacs/blob/master/userconfig.org][user]] :: User configuration
- [[https://github.com/DiamondBond/emacs/blob/master/modules/mail.org][mail]] :: Mail configuration

* Dependencies

Dependencies required to run this Emacs distro.

** Packages

*** System

#+begin_quote
offlineimap
fzf ripgrep ag
clang clangd llvm
texlive-core texlive-bin texlive-science
imagemagick
editorconfig
libjansson
rust-all cargo
nodejs npm
libxml2
gopls
gnuplot
prettier
hunspell
#+end_quote

*** Python

#+begin_src bash
  pip3 install pyflakes isort nose pytest pygifsicle nose2 httpserver future pandas numpy matplotlib python-rofi
#+end_src

*** Node

Deno & typescript-language-server for Typescript (TS/TSX) support.

#+begin_src bash
  sudo npm install -g deno typescript-language-server bash-language-server
#+end_src

** Files

*** ~/org & ~/pdfs

Symlink ~/org & ~/pdf to their respective subdirs within ~/Dropbox.

#+begin_src sh
  mkdir -p ~/Dropbox/{org,pdfs}; ln -s ~/Dropbox/org ~/org; ln -s ~/Dropbox/pdfs ~/pdfs
#+end_src

*** auth-info

1. ~/org/.authinfo.gpg
2. ~/org/secrets-el.gpg
3. ~/org/network-security.data

   NOTE: 'auth-info' can be backed up and restored to/from ~/org with =M-x
   sync/personal-backup= & =M-x sync/personal-restore=.

*** Emacs related files

1. ~/.emacs.d/places
2. ~/.emacs.d/recentf
3. ~/.emacs.d/custom.el

   NOTE: 'Emacs related files' can be backed up and restored to/from ~/org with =M-x
   sync/personal-backup= & =M-x sync/personal-restore=.
